#!/usr/local/bin/perl5 -w

# Makes new gender lines in a trace file
# which represent the striations of user's desire
$t = time;
$| = 1;
srand time;
@a=("hard", "soft", "difficult", "easy", "blue", "grey", "white",
"black", "heavy", "light", "miserable", "sexual", "wet", "lubricated",
"hungered", "nasty", "splayed", "womanly", "manly", "neutral", "neutered",
"death-like", "lively", "protruding", "penetrating", "thrusting",
"giving", "forgiving", "poor", "rich", "sedate", "wanton", "contrary",
"wayward", "wandering", "ill", "uneasy", "spry", "florid", "edgy",
"neurotic", "psychotic", "catatonic", "loose", "taut", "tight",
"depressed", "manic");
@prep=("Beneath or within", "Beyond", "Throughout", "Confusing",
"Staining", "In collusion with");
@noun=("thing", "type", "category", "being", "Being", "entity",
"constitution", "makeup", "construct", "essence", "existence");
$non = int rand(11);
$non1 = int rand(7);
$pre = int rand(6);
$gen = int(48*rand);
$gen1 = int(48*rand);
$gen2 = 49 - int(40*rand);
$time = int(time/3600);
$g = int(8*rand);
if ($sign=fork) {print "\nHold on right there!\n";}
 else {sleep(1); print "\nOne second!\n";
  exit(0);}
sleep(2);
print "\nHi! What's your name?\n";
chop($that=<STDIN>);
print "\nWell, $that, let's get started! Let's make a gender!\n";
sleep(1);
print "That ok with you?\n";
chop($str=<STDIN>);
if ($str eq "no") {print "\nOh well, nothing happened.\n"; goto FINAL;}  
else {print "\nOh well, let's get going!\n";}
print "It's impossible to decide on behavior!", "\n" if 1==$g;
print "Time's short, please help us along!", "\n" if 5==$g;
print "If you really want to do this I mean -", "\n" if 6== $g;
print "Where is this taking us, in the future?", "\n" if 4==$g;
sleep(1);
print "\nWhat do you want to call this @noun[$non1] you're making?\n";
$name=<STDIN>;
chop $name;
print "\n";
print "$that, $name is a new terrific gender!", "\n" if 3==$g;
print "$that, $name disgusts me; forget it! But anyway...", "\n" if 7==$g;
print "That's the name? Ah, anyway -", "\n" if 5==$g;
print "Yes, let's go with $name; it turns me on!", "\n" if 2==$g;
sleep(1);
print "Well, we're breathless; give us some adjectives!\n";
print "Place each one a separate line;\n";
print "and type Control-d on a separate line when done:\n";
@adj=<STDIN>;
chop(@adj);
$size=@adj;
$pick=int(rand($size));
$newpick=int(rand($size));
print "\nLet @adj[$pick] be our primary descriptor!\n";
open(APPEND, ">> enfolding");
print APPEND
join(":",@adj,$name,$str,$sign,$g,$that,$name,@adj[$pick]), "\n"; 
# join(":",$time,`date`);
close(APPEND);
open(STDOUT);
if ($pid = fork) {
  $diff=$pid - $$;
  print "$name makes me wet $diff times!", "\n" if 5 < $g;

  print <<Construct;

Well, $name already constructs @a[$gen1] trouble for us, subverting 
the categories we take for granted. 
@prep[$pre] the surface, $name is $diff, @a[$gen], $str?
But what is @adj[$newpick] here, its @noun[$non]?

Construct

} else {
          close (STDOUT);

          system("touch trace; rev enfolding >> trace");
          system("rm enfolding");

          exit(0);
}
sleep(1);
print "Do you feel your gender is close to $name?\n";
chop($answer=<STDIN>);
if ($answer eq "no") {print "You're dealing with @a[10+$pre] fictions.\n";}  
if ($answer eq "yes") {print "Ah, a true and @a[15+$pre] fantasy!\n";}
print "In any case, you must contact me about this...", "\n\n" if 3 < $g;
print "I think $name $pid is simple, not compound.", "\n\n" if 3==$g;
print "I think $name $$ is dubious, overly complicated...", "\n\n" if 6==$g;
print "Deconstruction marginalizes our $name $diff here!", "\n\n" if 4==$g;
print "What pronoun has existed for $time hours?", "\n" if 2==$g;
sleep(1);
print "$name and $$ and $pid - and you knew that all along!", "\n\n" if 2==$g;
sleep(1);
print "Wait! $name and $pid are gone forever!", "\n\n" if 1==$g;
FINAL: {
$d = int((gmtime)[6]);
$gen3 = 48 - int(20*rand);
print "For $d @a[$gen2] days, I have already been in @a[$gen3] mourning!";
print "\n";
$u = (time - $t)/60;
printf "And it has taken you just %2.3f minutes to make a gender!", "$u";
print "\n\n"; 
print `rev trace`, "\n\n";
}
exit(0);
